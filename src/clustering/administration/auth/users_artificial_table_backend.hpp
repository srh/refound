// Copyright 2010-2015 RethinkDB, all rights reserved.
#ifndef CLUSTERING_ADMINISTRATION_AUTH_USER_ARTIFICIAL_TABLE_BACKEND_HPP
#define CLUSTERING_ADMINISTRATION_AUTH_USER_ARTIFICIAL_TABLE_BACKEND_HPP

#include "rdb_protocol/artificial_table/backend.hpp"

namespace auth {

class users_artificial_table_fdb_backend_t :
    public artificial_table_fdb_backend_t
{
public:
    users_artificial_table_fdb_backend_t();

    std::string get_primary_key_name() const override;

    bool read_all_rows_as_vector(
        FDBDatabase *fdb,
        auth::user_context_t const &user_context,
        const signal_t *interruptor,
        std::vector<ql::datum_t> *rows_out,
        admin_err_t *error_out) override;

    bool read_row(
        FDBTransaction *txn,
        auth::user_context_t const &user_context,
        ql::datum_t primary_key,
        const signal_t *interruptor,
        ql::datum_t *row_out,
        admin_err_t *error_out) override;

    bool write_row(
        FDBTransaction *txn,
        auth::user_context_t const &user_context,
        ql::datum_t primary_key,
        bool pkey_was_autogenerated,
        ql::datum_t *new_value_inout,
        const signal_t *interruptor,
        admin_err_t *error_out) override;
};

}  // namespace auth

#endif  // CLUSTERING_ADMINISTRATION_AUTH_USER_ARTIFICIAL_TABLE_BACKEND_HPP
